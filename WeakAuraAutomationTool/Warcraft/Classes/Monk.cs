namespace WeakAuraAutomationTool.Warcraft.Classes
{
    public class Monk
    {
        public Spell BlackOxStatue = new Spell("Black Ox Statue", ClassType.Monk, ClassSpec.Base, new[] { 163177 }, new[] { 1 }, 0, 627607, new double[] { }, new double[] { }, false, 40, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModThreat), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpell) });
        public Spell BlackoutKick = new Spell("Blackout Kick", ClassType.Monk, ClassSpec.Base, new[] { 100784, 118166, 178338 }, new[] { 2, 3 }, 0, 574575, new double[] { 0, 3 }, new double[] { }, false, 5, new[] { "Monk - Brewmaster - Blackout Kick", "uncategorized" }, new[] { new SpellEffectData((SpellEffectName)0, EffectAuraType.None), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Energize, EffectAuraType.None), new SpellEffectData(SpellEffectName.EnergizePct, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell BlackoutKick_ = new Spell("Blackout Kick!", ClassType.Monk, ClassSpec.Base, new[] { 116768 }, new[] { 1 }, 0, 574575, new double[] { }, new double[] { 15 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AbilityIgnoreAuraState), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier) });
        public Spell BreathOfFire = new Spell("Breath of Fire", ClassType.Monk, ClassSpec.Base, new[] { 330907 }, new[] { 19 }, 0, 615339, new double[] { 0 }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell Celerity = new Spell("Celerity", ClassType.Monk, ClassSpec.Base, new[] { 115173 }, new[] { 0 }, 4, 607848, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ChargeRecoveryMod), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModMaxCharges) });
        public Spell CelestialBreath = new Spell("Celestial Breath", ClassType.Monk, ClassSpec.Base, new[] { 325213 }, new[] { 1 }, 0, 574571, new double[] { }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell CelestialFlames = new Spell("Celestial Flames", ClassType.Monk, ClassSpec.Base, new[] { 325190 }, new[] { 1 }, 0, 463567, new double[] { }, new double[] { 6 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier) });
        public Spell CelestialFortune = new Spell("Celestial Fortune", ClassType.Monk, ClassSpec.Base, new[] { 216521 }, new[] { 1 }, 0, 656166, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None) });
        public Spell ChiBurst = new Spell("Chi Burst", ClassType.Monk, ClassSpec.Base, new[] { 123986 }, new[] { 1 }, 3, 135734, new double[] { 0 }, new double[] { 1 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.CreateAreaTrigger, EffectAuraType.None), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell ChiTorpedo = new Spell("Chi Torpedo", ClassType.Monk, ClassSpec.Base, new[] { 115008, 119085 }, new[] { 1 }, 5, 607849, new double[] { }, new double[] { 1.1, 10 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AllowOnlyAbility), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.MechanicImmunity), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModIncreaseSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModMinimumSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModSpeedNoControl), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.UseNormalMovementSpeed), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.TriggerSpell, EffectAuraType.None) });
        public Spell ChiWave = new Spell("Chi Wave", ClassType.Monk, ClassSpec.Base, new[] { 115098 }, new[] { 1 }, 2, 606541, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell CloudedFocus = new Spell("Clouded Focus", ClassType.Monk, ClassSpec.Base, new[] { 337476 }, new[] { 1 }, 0, 628135, new double[] { }, new double[] { 8 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier) });
        public Spell ComboBreakerChiExplosion = new Spell("Combo Breaker: Chi Explosion", ClassType.Monk, ClassSpec.Base, new[] { 159407 }, new[] { 1 }, 0, 988193, new double[] { }, new double[] { 15 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell CracklingCraneLightning = new Spell("Crackling Crane Lightning", ClassType.Monk, ClassSpec.Base, new[] { 219512 }, new[] { 23 }, 0, 606542, new double[] { 0 }, new double[] { 6 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell CracklingJadeLightning = new Spell("Crackling Jade Lightning", ClassType.Monk, ClassSpec.Base, new[] { 117952, 117959, 123333 }, new[] { 3, 5, 19 }, 0, 606542, new double[] { 0 }, new double[] { 4 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicDamage), new SpellEffectData(SpellEffectName.Energize, EffectAuraType.None) });
        public Spell CracklingJadeShock = new Spell("Crackling Jade Shock", ClassType.Monk, ClassSpec.Base, new[] { 117962 }, new[] { 1 }, 0, 606542, new double[] { 0 }, new double[] { }, false, 5, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.KnockBack, EffectAuraType.None) });
        public Spell CracklingOxLightning = new Spell("Crackling Ox Lightning", ClassType.Monk, ClassSpec.Base, new[] { 219509 }, new[] { 23 }, 0, 606542, new double[] { 0 }, new double[] { 6 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell CracklingTigerLightning = new Spell("Crackling Tiger Lightning", ClassType.Monk, ClassSpec.Base, new[] { 125930 }, new[] { 23 }, 0, 606542, new double[] { 0 }, new double[] { 6 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell CracklingTigerLightningDriver = new Spell("Crackling Tiger Lightning Driver", ClassType.Monk, ClassSpec.Base, new[] { 123999 }, new[] { 1 }, 0, 620832, new double[] { }, new double[] { -0.001 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpell), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell CycloneStrikes = new Spell("Cyclone Strikes", ClassType.Monk, ClassSpec.Base, new[] { 220358 }, new[] { 1 }, 0, 606543, new double[] { }, new double[] { 15 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, (EffectAuraType)408), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier) });
        public Spell DampenHarm = new Spell("Dampen Harm", ClassType.Monk, ClassSpec.Base, new[] { 122278, 123715 }, new[] { 1 }, 15, 620827, new double[] { 0 }, new double[] { 10 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.SchoolAbsorb), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell Dematerialize = new Spell("Dematerialize", ClassType.Monk, ClassSpec.Base, new[] { 122464, 122465 }, new[] { 1, 20 }, 0, 135731, new double[] { }, new double[] { 2 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModAttackerMeleeHitChance), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModAttackerRangedHitChance), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModAttackerSpellHitChance), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ProcTriggerSpell) });
        public Spell Detox = new Spell("Detox", ClassType.Monk, ClassSpec.Base, new[] { 218164 }, new[] { 24 }, 0, 460692, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dispel, EffectAuraType.None) });
        public Spell DiffuseMagic = new Spell("Diffuse Magic", ClassType.Monk, ClassSpec.Base, new[] { 122783 }, new[] { 1 }, 14, 775460, new double[] { 0 }, new double[] { 6 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModDamagePercentTaken) });
        public Spell DizzyingHaze = new Spell("Dizzying Haze", ClassType.Monk, ClassSpec.Base, new[] { 115180 }, new[] { 10 }, 0, 606544, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.TriggerMissile, EffectAuraType.None) });
        public Spell ElusiveBrawler = new Spell("Elusive Brawler", ClassType.Monk, ClassSpec.Base, new[] { 195630 }, new[] { 30 }, 0, 611417, new double[] { }, new double[] { 10 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModDodgePercent) });
        public Spell EnvelopingMist = new Spell("Enveloping Mist", ClassType.Monk, ClassSpec.Base, new[] { 227345, 344008, 344240 }, new[] { 1, 10, 12 }, 0, 775461, new double[] { 0 }, new double[] { 6 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModHealingReceived), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicHeal), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell EssenceFont = new Spell("Essence Font", ClassType.Monk, ClassSpec.Base, new[] { 191840 }, new[] { 1 }, 0, 1360978, new double[] { }, new double[] { 8 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicHeal), new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None) });
        public Spell ExpelHarm = new Spell("Expel Harm", ClassType.Monk, ClassSpec.Base, new[] { 115072, 115129 }, new[] { 7, 22 }, 0, 627486, new double[] { 0 }, new double[] { }, false, 10, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell EyeOfTheTiger = new Spell("Eye of the Tiger", ClassType.Monk, ClassSpec.Base, new[] { 196607 }, new[] { 0 }, 1, 236165, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ProcTriggerSpell) });
        public Spell FistsOfFury = new Spell("Fists of Fury", ClassType.Monk, ClassSpec.Base, new[] { 117418, 120086, 178345, 232055 }, new[] { 1, 10 }, 0, 627606, new double[] { 0 }, new double[] { 4 }, false, 8, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModParryPercent), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModStun), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpell), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpellWithValue), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None), new SpellEffectData(SpellEffectName.TriggerSpell, EffectAuraType.None) });
        public Spell FistsOfInsaneFury = new Spell("Fists of Insane Fury", ClassType.Monk, ClassSpec.Base, new[] { 287606 }, new[] { 14 }, 0, 627606, new double[] { 0 }, new double[] { 4 }, false, 8, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModParryPercent), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicDummy), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell FlyingSerpentKick = new Spell("Flying Serpent Kick", ClassType.Monk, ClassSpec.Base, new[] { 115057, 123586, 206799 }, new[] { 1, 10 }, 0, 463281, new double[] { 25 }, new double[] { 0.2, 2, 4 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModDecreaseSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModIncreaseSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModMinimumSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModPacifySilence), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModSpeedNoControl), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.OverrideActionbarSpells), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpell), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.UseNormalMovementSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.WaterWalk), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell FortifyingBrew = new Spell("Fortifying Brew", ClassType.Monk, ClassSpec.Base, new[] { 115203, 120954 }, new[] { 15, 28 }, 0, 615341, new double[] { 0 }, new double[] { 15 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModDamagePercentTaken), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModIncreaseHealth), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModMechanicDamageTakenPercent), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModScale), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell GloryOfTheDawn = new Spell("Glory of the Dawn", ClassType.Monk, ClassSpec.Base, new[] { 288636 }, new[] { 24 }, 0, 1381297, new double[] { }, new double[] { }, false, 5, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Energize, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell Guard = new Spell("Guard", ClassType.Monk, ClassSpec.Base, new[] { 115295 }, new[] { 15 }, 0, 611417, new double[] { 0 }, new double[] { 8 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.SchoolAbsorb) });
        public Spell HealingSphere = new Spell("Healing Sphere", ClassType.Monk, ClassSpec.Base, new[] { 224863 }, new[] { 19 }, 0, 606546, new double[] { }, new double[] { 30 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, (EffectAuraType)408) });
        public Spell InvokeChi_JiTheRedCrane = new Spell("Invoke Chi-Ji, the Red Crane", ClassType.Monk, ClassSpec.Base, new[] { 325211, 331645 }, new[] { 1 }, 0, 977169, new double[] { 0 }, new double[] { 25 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None) });
        public Spell InvokeNiuzaoTheBlackOx = new Spell("Invoke Niuzao, the Black Ox", ClassType.Monk, ClassSpec.Base, new[] { 196729, 331642 }, new[] { 1, 34 }, 0, 608951, new double[] { 0 }, new double[] { -0.001, 25 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModThreat), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.SchoolAbsorb), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None) });
        public Spell InvokeXuenTheWhiteTiger = new Spell("Invoke Xuen, the White Tiger", ClassType.Monk, ClassSpec.Base, new[] { 331643 }, new[] { 34 }, 0, 620832, new double[] { 0 }, new double[] { 25 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None) });
        public Spell InvokeYulonTheJadeSerpent = new Spell("Invoke Yu'lon, the Jade Serpent", ClassType.Monk, ClassSpec.Base, new[] { 331644 }, new[] { 34 }, 0, 574571, new double[] { 0 }, new double[] { 25 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicDummy), new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None) });
        public Spell IronskinBrew = new Spell("Ironskin Brew", ClassType.Monk, ClassSpec.Base, new[] { 115308, 322119 }, new[] { 14, 16 }, 0, 1360979, new double[] { 0 }, new double[] { 7 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell KegSmash = new Spell("Keg Smash", ClassType.Monk, ClassSpec.Base, new[] { 330911 }, new[] { 10 }, 0, 594274, new double[] { 0 }, new double[] { 15 }, false, 15, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModDecreaseSpeed), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell LegSweep = new Spell("Leg Sweep", ClassType.Monk, ClassSpec.Base, new[] { 119381 }, new[] { 6 }, 0, 642414, new double[] { 0 }, new double[] { 3 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModStun) });
        public Spell LifecyclesEnvelopingMist = new Spell("Lifecycles (Enveloping Mist)", ClassType.Monk, ClassSpec.Base, new[] { 197919 }, new[] { 1 }, 0, 775461, new double[] { }, new double[] { 15 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier) });
        public Spell LifecyclesVivify = new Spell("Lifecycles (Vivify)", ClassType.Monk, ClassSpec.Base, new[] { 197916 }, new[] { 1 }, 0, 628675, new double[] { 0 }, new double[] { 15 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier) });
        // public Spell Monk = new Spell("Monk", ClassType.Monk, ClassSpec.Spell, new[] { 130610 }, new[] { 50 }, 0, 572033, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell MonkJabOverrideGlyphClearing = new Spell("Monk Jab Override Glyph Clearing", ClassType.Monk, ClassSpec.Base, new[] { 130097 }, new[] { 1 }, 0, 132528, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ScriptEffect, EffectAuraType.None) });
        public Spell MysticTouch = new Spell("Mystic Touch", ClassType.Monk, ClassSpec.Base, new[] { 8647 }, new[] { 49 }, 0, 615342, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell NiuzaosEssence = new Spell("Niuzao's Essence", ClassType.Monk, ClassSpec.Base, new[] { 232876, 232877 }, new[] { 1, 31 }, 0, 133701, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ScriptEffect, EffectAuraType.None) });
        public Spell OxCharge = new Spell("Ox Charge", ClassType.Monk, ClassSpec.Base, new[] { 196728 }, new[] { 1 }, 0, 615340, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Charge, EffectAuraType.None) });
        public Spell Paralysis = new Spell("Paralysis", ClassType.Monk, ClassSpec.Base, new[] { 115078, 344359 }, new[] { 22, 56 }, 0, 629534, new double[] { 45 }, new double[] { 60 }, false, 20, new[] { "Mez" }, new[] { new SpellEffectData((SpellEffectName)0, EffectAuraType.None), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddFlatModifier), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModStun) });
        public Spell PauseHarm = new Spell("Pause Harm", ClassType.Monk, ClassSpec.Base, new[] { 115155 }, new[] { 1 }, 0, 135940, new double[] { 0 }, new double[] { 8 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.SchoolAbsorb) });
        public Spell PrismaticCloak = new Spell("Prismatic Cloak", ClassType.Monk, ClassSpec.Base, new[] { 198065 }, new[] { 1 }, 0, 135752, new double[] { }, new double[] { 2 }, true, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModDamagePercentTaken) });
        public Spell Provoke = new Spell("Provoke", ClassType.Monk, ClassSpec.Base, new[] { 115546, 196727, 328670 }, new[] { 1, 9, 39 }, 0, 620830, new double[] { 0 }, new double[] { 6 }, false, 30, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddFlatModifier), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModPossessPet), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModTaunt), new SpellEffectData(SpellEffectName.AttackMe, EffectAuraType.None), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Threat, EffectAuraType.None) });
        public Spell RefreshingJadeWind = new Spell("Refreshing Jade Wind", ClassType.Monk, ClassSpec.Base, new[] { 162530 }, new[] { 1 }, 0, 606549, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None) });
        public Spell Resuscitate = new Spell("Resuscitate", ClassType.Monk, ClassSpec.Base, new[] { 115178 }, new[] { 13 }, 0, 132132, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Resurrect, EffectAuraType.None) });
        public Spell ReverseHarm = new Spell("Reverse Harm", ClassType.Monk, ClassSpec.Base, new[] { 287771 }, new[] { 1 }, 0, 627486, new double[] { 0 }, new double[] { }, false, 10, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Energize, EffectAuraType.None), new SpellEffectData(SpellEffectName.HealPct, EffectAuraType.None) });
        public Spell Revival = new Spell("Revival", ClassType.Monk, ClassSpec.Base, new[] { 297850 }, new[] { 27 }, 0, 1020466, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dispel, EffectAuraType.None), new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None) });
        public Spell RideTheWind = new Spell("Ride the Wind", ClassType.Monk, ClassSpec.Base, new[] { 159535 }, new[] { 1 }, 0, 132309, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ScriptEffect, EffectAuraType.None) });
        public Spell RingOfPeace = new Spell("Ring of Peace", ClassType.Monk, ClassSpec.Base, new[] { 116844 }, new[] { 25 }, 12, 839107, new double[] { 0 }, new double[] { 5 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.CreateAreaTrigger, EffectAuraType.None), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell RisingSunKick = new Spell("Rising Sun Kick", ClassType.Monk, ClassSpec.Base, new[] { 125150, 178341, 185099, 190823 }, new[] { 24 }, 0, 642415, new double[] { 0 }, new double[] { }, false, 5, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None), new SpellEffectData(SpellEffectName.TriggerSpell, EffectAuraType.None) });
        public Spell RisingThunder = new Spell("Rising Thunder", ClassType.Monk, ClassSpec.Base, new[] { 210804 }, new[] { 1 }, 0, 839977, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell Roll = new Spell("Roll", ClassType.Monk, ClassSpec.Base, new[] { 107427, 109131, 109132, 328669 }, new[] { 2, 3, 14 }, 0, 574574, new double[] { 0 }, new double[] { 0.8 }, false, 0, new[] { "Speed" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AllowOnlyAbility), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.MechanicImmunity), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModMaxCharges), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModMinimumSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModSpeedNoControl), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.UseNormalMovementSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.WaterWalk), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell RollSpeedControls = new Spell("Roll Speed Controls", ClassType.Monk, ClassSpec.Base, new[] { 157361 }, new[] { 1 }, 0, 574574, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell RushingJadeWind = new Spell("Rushing Jade Wind", ClassType.Monk, ClassSpec.Base, new[] { 261715, 281955 }, new[] { 1 }, 0, 606549, new double[] { 0 }, new double[] { -0.001, 60 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpell), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell Shuffle = new Spell("Shuffle", ClassType.Monk, ClassSpec.Base, new[] { 215479 }, new[] { 16 }, 0, 642416, new double[] { }, new double[] { 5 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddPctModifier), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell SoothingBreath = new Spell("Soothing Breath", ClassType.Monk, ClassSpec.Base, new[] { 343737 }, new[] { 42 }, 0, 606550, new double[] { }, new double[] { 4.5 }, false, 60, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicHeal) });
        public Spell SoothingMist = new Spell("Soothing Mist", ClassType.Monk, ClassSpec.Base, new[] { 198533, 209525, 248887, 328283, 344239 }, new[] { 1, 10 }, 0, 606550, new double[] { 0 }, new double[] { 4, 8, 20, 30 }, true, 60, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.CastWhileWalking), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicHeal), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell SpinningCraneKick = new Spell("Spinning Crane Kick", ClassType.Monk, ClassSpec.Base, new[] { 101546, 178342, 330901 }, new[] { 7, 20 }, 0, 606543, new double[] { 0 }, new double[] { 1.5, 2.25 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AllowOnlyAbility), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicDummy), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicTriggerSpell) });
        public Spell Spitfire = new Spell("Spitfire", ClassType.Monk, ClassSpec.Base, new[] { 242581 }, new[] { 1 }, 0, 615339, new double[] { }, new double[] { 2 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell StanceOfTheFierceTiger = new Spell("Stance of the Fierce Tiger", ClassType.Monk, ClassSpec.Base, new[] { 103985 }, new[] { 1 }, 0, 611420, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell Stomp = new Spell("Stomp", ClassType.Monk, ClassSpec.Base, new[] { 227291 }, new[] { 1 }, 0, 132368, new double[] { 0 }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell StormEarthAndFire = new Spell("Storm, Earth, and Fire", ClassType.Monk, ClassSpec.Base, new[] { 138121, 138123 }, new[] { 1 }, 0, 132846, new double[] { 0 }, new double[] { -0.001 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None) });
        public Spell StormEarthAndFireFixate = new Spell("Storm, Earth, and Fire: Fixate", ClassType.Monk, ClassSpec.Base, new[] { 221771 }, new[] { 26 }, 0, 236188, new double[] { 0 }, new double[] { }, false, 50, new string[] { }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell SummonBlackOxStatue = new Spell("Summon Black Ox Statue", ClassType.Monk, ClassSpec.Base, new[] { 115315, 163178 }, new[] { 1 }, 11, 627607, new double[] { 0 }, new double[] { 900 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData((SpellEffectName)0, EffectAuraType.None), new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None), new SpellEffectData(SpellEffectName.Threat, EffectAuraType.None) });
        public Spell SurgingMist = new Spell("Surging Mist", ClassType.Monk, ClassSpec.Base, new[] { 227344 }, new[] { 8 }, 0, 628135, new double[] { 0 }, new double[] { 6 }, true, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModHealingReceived), new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None) });
        public Spell TigerLeap = new Spell("Tiger Leap", ClassType.Monk, ClassSpec.Base, new[] { 124007 }, new[] { 1 }, 0, 135853, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Jump, EffectAuraType.None) });
        public Spell TigerLust = new Spell("Tiger Lust", ClassType.Monk, ClassSpec.Base, new[] { 124009 }, new[] { 1 }, 0, 132120, new double[] { }, new double[] { 8 }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModIncreaseSpeed) });
        public Spell TigerPalm = new Spell("Tiger Palm", ClassType.Monk, ClassSpec.Base, new[] { 100780, 331433 }, new[] { 1 }, 0, 606551, new double[] { 0 }, new double[] { }, false, 5, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Energize, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell TigerTailSweep = new Spell("Tiger Tail Sweep", ClassType.Monk, ClassSpec.Base, new[] { 264348 }, new[] { 0 }, 10, 642414, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.AddFlatModifier) });
        public Spell TigereyeBrew = new Spell("Tigereye Brew", ClassType.Monk, ClassSpec.Base, new[] { 248689 }, new[] { 1 }, 0, 613399, new double[] { }, new double[] { }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell TigereyeBrew_ = new Spell("Tigereye Brew!", ClassType.Monk, ClassSpec.Base, new[] { 248648 }, new[] { 1 }, 0, 613399, new double[] { }, new double[] { -0.001 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell TigersLust = new Spell("Tiger's Lust", ClassType.Monk, ClassSpec.Base, new[] { 116841 }, new[] { 1 }, 6, 651727, new double[] { 0 }, new double[] { 6 }, false, 20, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModIncreaseSpeed) });
        public Spell TouchOfDeath = new Spell("Touch of Death", ClassType.Monk, ClassSpec.Base, new[] { 322109, 322113 }, new[] { 10, 44 }, 0, 606552, new double[] { 0 }, new double[] { }, false, 5, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
        public Spell TouchOfDeathNotificationDriver = new Spell("Touch of Death Notification Driver", ClassType.Monk, ClassSpec.Base, new[] { 121128 }, new[] { 10 }, 0, 606552, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.PeriodicDummy) });
        public Spell TouchOfFatality = new Spell("Touch of Fatality", ClassType.Monk, ClassSpec.Base, new[] { 169340 }, new[] { 17 }, 0, 606552, new double[] { 0 }, new double[] { }, false, 5, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Instakill, EffectAuraType.None) });
        public Spell Transcendence = new Spell("Transcendence", ClassType.Monk, ClassSpec.Base, new[] { 101643 }, new[] { 32 }, 0, 627608, new double[] { 0 }, new double[] { 900 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.Summon, EffectAuraType.None) });
        public Spell TranscendenceTransfer = new Spell("Transcendence: Transfer", ClassType.Monk, ClassSpec.Base, new[] { 119996 }, new[] { 32 }, 0, 237585, new double[] { 0 }, new double[] { 1 }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy), new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None) });
        public Spell Vivify = new Spell("Vivify", ClassType.Monk, ClassSpec.Base, new[] { 116670 }, new[] { 4 }, 0, 1360980, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None) });
        public Spell YulonsGift = new Spell("Yu'lon's Gift", ClassType.Monk, ClassSpec.Base, new[] { 159534, 232879 }, new[] { 1 }, 0, 1381301, new double[] { }, new double[] { }, false, 0, new string[] { }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Dummy) });
        public Spell ZenFlight = new Spell("Zen Flight", ClassType.Monk, ClassSpec.Base, new[] { 125883 }, new[] { 30 }, 0, 660248, new double[] { 0 }, new double[] { -0.001 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.Fly), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModIncreaseVehicleFlightSpeed), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModNoActions) });
        public Spell ZenPilgrimage = new Spell("Zen Pilgrimage", ClassType.Monk, ClassSpec.Base, new[] { 126892, 194004, 194011, 293866 }, new[] { 11, 12, 23 }, 0, 775462, new double[] { 60 }, new double[] { -0.001 }, false, 0, new[] { "Zen Pilgrimage" }, new[] { new SpellEffectData((SpellEffectName)203, EffectAuraType.None), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.ModSpellCritChanceSchool), new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.OverrideActionbarSpells), new SpellEffectData(SpellEffectName.KillCredit, EffectAuraType.None), new SpellEffectData(SpellEffectName.RitualBase, EffectAuraType.None), new SpellEffectData(SpellEffectName.TeleportToLfgDungeon, EffectAuraType.None), new SpellEffectData(SpellEffectName.TeleportUnits, EffectAuraType.None), new SpellEffectData(SpellEffectName.TriggerSpell, EffectAuraType.None) });
        public Spell ZenPilgrimageReturn = new Spell("Zen Pilgrimage: Return", ClassType.Monk, ClassSpec.Base, new[] { 126895, 126896 }, new[] { 1, 16 }, 0, 775462, new double[] { 0 }, new double[] { -0.001 }, false, 0, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.ApplyAura, EffectAuraType.OverrideActionbarSpells), new SpellEffectData(SpellEffectName.ScriptEffect, EffectAuraType.None) });
        public Spell ZenPulse = new Spell("Zen Pulse", ClassType.Monk, ClassSpec.Base, new[] { 124081, 198487 }, new[] { 1 }, 0, 613397, new double[] { 0 }, new double[] { }, false, 40, new[] { "uncategorized" }, new[] { new SpellEffectData(SpellEffectName.Dummy, EffectAuraType.None), new SpellEffectData(SpellEffectName.Heal, EffectAuraType.None), new SpellEffectData(SpellEffectName.SchoolDamage, EffectAuraType.None) });
    }
}